sudo: required

services:
  - docker
  - postgresql

language: node_js

node_js:
  - 14

dist: focal

cache:
  yarn: true
  directories:
    # we also need to cache folder with Cypress binary
    - ~/.cache/Cypress
matrix:
  allow_failures:
  #
jobs:
  include:
    - stage: test
      name: 'Cypress Tests'
      install:
        - yarn --frozen-lockfile
        - yarn global add cypress@5.6.0
        - cypress install
        - yarn global add ganache-cli@6.12.2
        - yarn global add wait-on
      before_script:
        - sudo service postgresql stop
        - sudo apt-get install libsecret-1-dev
        - ganache-cli -h 0.0.0.0 -b 1 >ganache.log 2>&1 &
        - sleep 5
        - cd ../ && git clone https://github.com/ensdomains/ens-subgraph.git
        - cd ens-subgraph && yarn && cd ../
        - git clone https://github.com/graphprotocol/graph-node
        - pwd
        - cd ens-app && ./scripts/graph-node.js && cd ../
        - ls graph-node/docker
        - cd graph-node/docker && ./setup.sh
        - rm -rf data
        - docker-compose up 2>&1 > ~/docker-compose.log &
        - DOCKER_PATH=`pwd`
        - ls ~/docker-compose.log
        - sleep 120
        - cd ../../
        - cd ens-app && yarn preTest && yarn subgraph && cd ../
        - pwd
        - ls -ltr ~
        - cd ens-subgraph && (yarn setup || cat ~/docker-compose.log ) && cd ../
      script:
        - pwd
        - ls
        - cd ens-app && yarn cypress:ci && cd ../
    - stage: test
      name: 'Unit Tests'
      install:
        - yarn --frozen-lockfile
      script:
        - yarn test:coverage
    #    - stage: test
    #      name: 'Branch Preview'
    #      install:
    #        - yarn install
    #      script:
    #        - npm run build
    #        - npm run postbuild
    #        - pwd
    #        - ls
    #        - surge build "$TRAVIS_BRANCH"-ensdev.surge.sh
    #    - stage: test
    #      name: 'Cleanup Previews'
    #      install:
    #        - yarn add surge
    #      script:
    #        - ./surgeGarbageCollect.js
    - stage: deploy
      name: 'Deploy to live'
      script: yarn deploy

stages:
  - name: test
    if: branch != master
  - name: deploy
    if: branch = master

notifications:
  email: false
